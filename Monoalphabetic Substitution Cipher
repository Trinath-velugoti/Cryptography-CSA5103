#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to perform encryption
void monoalphabeticEncrypt(char *plaintext, char *ciphertextAlphabet, char *encryptedText) {
    for (int i = 0; plaintext[i] != '\0'; ++i) {
        char ch = plaintext[i];
        if (isalpha(ch)) {
            if (isupper(ch)) {
                encryptedText[i] = toupper(ciphertextAlphabet[ch - 'A']);
            } else {
                encryptedText[i] = tolower(ciphertextAlphabet[ch - 'a']);
            }
        } else {
            encryptedText[i] = ch; // Non-alphabetic characters are unchanged
        }
    }
    encryptedText[strlen(plaintext)] = '\0'; // Null-terminate the encrypted string
}

int main() {
    char plaintext[1000];
    char ciphertextAlphabet[27]; // 26 letters + null terminator
    char encryptedText[1000];

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    // Remove newline if present
    plaintext[strcspn(plaintext, "\n")] = '\0';

    printf("Enter a 26-letter ciphertext alphabet (e.g., QWERTYUIOPASDFGHJKLZXCVBNM): ");
    scanf("%26s", ciphertextAlphabet);

    // Validate the length
    if (strlen(ciphertextAlphabet) != 26) {
        printf("Error: Ciphertext alphabet must contain exactly 26 characters.\n");
        return 1;
    }

    monoalphabeticEncrypt(plaintext, ciphertextAlphabet, encryptedText);

    printf("Encrypted message: %s\n", encryptedText);

    return 0;
}
